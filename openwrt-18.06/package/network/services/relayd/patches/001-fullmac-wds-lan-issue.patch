Index: relayd-2016-02-07-ad0b25ad/dhcp.c
===================================================================
--- relayd-2016-02-07-ad0b25ad.orig/dhcp.c	2016-02-08 04:34:33.000000000 +0800
+++ relayd-2016-02-07-ad0b25ad/dhcp.c	2020-12-08 12:18:12.477173247 +0800
@@ -155,6 +155,9 @@
 			parse_dhcp_options(host, dhcp, udplen - sizeof(struct udphdr));
 	}
 
+	if (!memcmp(pkt->eth.ether_shost, rif->sll.sll_addr, 6))
+		return true;
+
 	DPRINTF(2, "%s: handling DHCP %s\n", rif->ifname, (dhcp->op == 1 ? "request" : "response"));
 
 	dhcp->flags |= htons(DHCP_FLAG_BROADCAST);
Index: relayd-2016-02-07-ad0b25ad/main.c
===================================================================
--- relayd-2016-02-07-ad0b25ad.orig/main.c	2016-02-08 04:34:33.000000000 +0800
+++ relayd-2016-02-07-ad0b25ad/main.c	2020-12-08 12:20:48.105177836 +0800
@@ -387,12 +387,18 @@
 		IP_BUF(pkt->arp.arp_spa),
 		MAC_BUF(pkt->eth.ether_shost));
 
-	if (!memcmp(pkt->arp.arp_spa, "\x00\x00\x00\x00", 4))
+	if (!memcmp(pkt->arp.arp_spa, "\x00\x00\x00\x00", ETH_ALEN))
 		return;
 
 	host = find_host_by_ipaddr(NULL, pkt->arp.arp_spa);
-	if (!host || host->rif != rif)
+	if (!host || host->rif != rif) {
+		if (!memcmp(rif->sll.sll_addr, pkt->eth.ether_shost, 6))
+			return;
+		if (local_route_table && !memcmp(pkt->arp.arp_spa, local_addr, sizeof(local_addr))) {
+			return;
+		}
 		relayd_refresh_host(rif, pkt->eth.ether_shost, pkt->arp.arp_spa);
+	}
 
 	if (local_route_table && !memcmp(pkt->arp.arp_tpa, local_addr, sizeof(local_addr))) {
 		send_arp_reply(rif, local_addr, pkt->arp.arp_sha, pkt->arp.arp_spa);
@@ -433,6 +439,9 @@
 	if (host->rif == rif)
 		return;
 
+	if (!memcmp(pkt->arp.arp_tpa, pkt->arp.arp_spa, ETH_ALEN))
+		return;
+
 	send_arp_reply(host->rif, pkt->arp.arp_spa, host->lladdr, host->ipaddr);
 }
 
