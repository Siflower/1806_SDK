Index: hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/hostapd.c	2020-11-11 16:39:51.062996709 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.c	2020-11-11 16:43:08.743005005 +0800
@@ -159,6 +159,7 @@
 			wpa_printf(MSG_ERROR, "Failed to configure WPA IE for "
 				   "the kernel driver.");
 	} else if (hapd->wpa_auth) {
+		rsn_preauth_iface_deinit(hapd);
 		wpa_deinit(hapd->wpa_auth);
 		hapd->wpa_auth = NULL;
 		hostapd_set_privacy(hapd, 0);
@@ -200,6 +201,24 @@
 	}
 }
 
+/* deauth all stations connected */
+void hostapd_sta_deauth_all(struct hostapd_data *hapd)
+{
+	struct hostapd_iface *iface = hapd->iface;
+	size_t j;
+
+	for (j = 0; j < iface->num_bss; j++) {
+		hostapd_flush_old_stations(iface->bss[j],
+					   WLAN_REASON_PREV_AUTH_NOT_VALID);
+		hostapd_broadcast_wep_clear(iface->bss[j]);
+
+#ifndef CONFIG_NO_RADIUS
+		/* TODO: update dynamic data based on changed configuration
+		 * items (e.g., open/close sockets, etc.) */
+		radius_client_flush(iface->bss[j]->radius, 0);
+#endif /* CONFIG_NO_RADIUS */
+	}
+}
 
 static int hostapd_iface_conf_changed(struct hostapd_config *newconf,
 				      struct hostapd_config *oldconf)
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.h
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/hostapd.h	2020-11-11 16:39:51.078996710 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.h	2020-11-11 16:44:09.783007567 +0800
@@ -611,6 +611,7 @@
 hostapd_switch_channel_fallback(struct hostapd_iface *iface,
 				const struct hostapd_freq_params *freq_params);
 void hostapd_cleanup_cs_params(struct hostapd_data *hapd);
+void hostapd_sta_deauth_all(struct hostapd_data *hapd);
 void hostapd_periodic_iface(struct hostapd_iface *iface);
 int hostapd_owe_trans_get_info(struct hostapd_data *hapd);
 
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/ubus.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/ubus.c	2020-11-11 16:39:51.126996712 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/ubus.c	2020-11-11 16:46:01.935012273 +0800
@@ -373,6 +373,16 @@
 }
 
 static int
+hostapd_sta_deauth(struct ubus_context *ctx, struct ubus_object *obj,
+			struct ubus_request_data *req, const char *method,
+			struct blob_attr *msg)
+{
+	struct hostapd_data *hapd = container_of(obj, struct hostapd_data, ubus.obj);
+	hostapd_sta_deauth_all(hapd);
+	return 0;
+}
+
+static int
 hostapd_bss_update_beacon(struct ubus_context *ctx, struct ubus_object *obj,
 			struct ubus_request_data *req, const char *method,
 			struct blob_attr *msg)
@@ -1107,6 +1117,7 @@
 	UBUS_METHOD_NOARG("list_bans", hostapd_bss_list_bans),
 	UBUS_METHOD_NOARG("wps_start", hostapd_bss_wps_start),
 	UBUS_METHOD_NOARG("wps_cancel", hostapd_bss_wps_cancel),
+	UBUS_METHOD_NOARG("deauth", hostapd_sta_deauth),
 	UBUS_METHOD_NOARG("update_beacon", hostapd_bss_update_beacon),
 	UBUS_METHOD_NOARG("get_features", hostapd_bss_get_features),
 #ifdef NEED_AP_MLME
