Index: hostapd-2019-08-08-ca8c2bd2/src/ap/acs.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/acs.c	2020-11-11 11:31:23.714220032 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/acs.c	2020-11-11 11:52:14.310272514 +0800
@@ -605,6 +605,24 @@
 	wpa_printf(MSG_DEBUG,
 		   "ACS: Survey analysis for selected bandwidth %d MHz", bw);
 
+	FILE *channel_file = NULL;
+	u8 acs_chan_last_chan = 0;
+	char buf[8];
+	if(iface->conf->acs_chan_dynamic_select_enable)
+	{
+		if (iface->current_mode->mode == HOSTAPD_MODE_IEEE80211G)
+			channel_file = fopen("/var/run/24g.channel", "r");
+		else
+			channel_file = fopen("/var/run/5g.channel", "r");
+	}
+
+	if (channel_file)
+	{
+		fgets(buf, sizeof(buf), channel_file);
+		fclose(channel_file);
+		acs_chan_last_chan = atoi((char *)&buf);
+	}
+
 	for (i = 0; i < iface->current_mode->num_channels; i++) {
 		double total_weight;
 		struct acs_bias *bias, tmp_bias;
@@ -660,6 +678,16 @@
 			}
 		}
 
+		if(acs_chan_last_chan && acs_chan_last_chan == chan->chan)
+		{
+			//current channel(last channel) is not busy enouth to have to change it
+			if(iface->conf->acs_chan_busy_per && (chan->interference_factor * 100) < iface->conf->acs_chan_busy_per)
+			{
+				ideal_chan = chan;
+				break;
+			}
+		}
+
 		factor = 0;
 		if (acs_usable_chan(chan))
 			factor = chan->interference_factor;
@@ -730,7 +758,15 @@
 		factor /= total_weight;
 
 		bias = NULL;
-		if (iface->conf->acs_chan_bias) {
+		if(acs_chan_last_chan)
+		{
+			if(acs_chan_last_chan == chan->chan)
+			{
+				tmp_bias.channel = chan->chan;
+				tmp_bias.bias = (45 - iface->conf->acs_chan_bet_per) / 45.0;
+				bias = &tmp_bias;
+			}
+		} else if (iface->conf->acs_chan_bias) {
 			for (k = 0; k < iface->conf->num_acs_chan_bias; k++) {
 				bias = &iface->conf->acs_chan_bias[k];
 				if (bias->channel == chan->chan)
@@ -977,3 +1013,19 @@
 
 	return HOSTAPD_CHAN_ACS;
 }
+
+void ap_dynamic_select_channel_timeout(void *eloop_ctx, void *timeout_ctx)
+{
+	struct hostapd_data *hapd = eloop_ctx;
+
+	//if have sta connection,and switch_channel_even_have_sta_enable false,return
+	if(!hapd->iconf->switch_channel_even_have_sta_enable && hapd->num_sta > 0)
+	{
+		eloop_register_timeout(hapd->iconf->acs_chan_dynamic_select_period * 60, 0,
+				       ap_dynamic_select_channel_timeout, hapd, NULL);
+		return;
+	}
+
+	eloop_terminate();
+	return;
+}
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/acs.h
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/acs.h	2019-08-07 21:25:25.000000000 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/acs.h	2020-11-11 11:36:36.474233157 +0800
@@ -14,6 +14,7 @@
 
 enum hostapd_chan_status acs_init(struct hostapd_iface *iface);
 void acs_cleanup(struct hostapd_iface *iface);
+void ap_dynamic_select_channel_timeout(void *eloop_ctx, void *timeout_ctx);
 
 #else /* CONFIG_ACS */
 
@@ -27,6 +28,12 @@
 {
 }
 
+void ap_dynamic_select_channel_timeout(void *eloop_ctx, void *timeout_ctx)
+{
+	wpa_printf(MSG_ERROR, "ACS was disabled on your build, rebuild hostapd with CONFIG_ACS=y or set channel");
+	return;
+}
+
 #endif /* CONFIG_ACS */
 
 #endif /* ACS_H */
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/ap_config.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/ap_config.c	2020-11-11 11:31:23.790220035 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/ap_config.c	2020-11-11 11:54:03.774277108 +0800
@@ -242,6 +242,11 @@
 	conf->acs_ch_list.num = 0;
 #ifdef CONFIG_ACS
 	conf->acs_num_scans = 5;
+	conf->acs_chan_dynamic_select_enable = 0;
+	conf->acs_chan_dynamic_select_period = 8;
+	conf->switch_channel_even_have_sta_enable = 0;
+	conf->acs_chan_busy_per = 50;
+	conf->acs_chan_bet_per = 20;
 #endif /* CONFIG_ACS */
 
 #ifdef CONFIG_IEEE80211AX
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/ap_config.h
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/ap_config.h	2020-11-11 11:31:23.790220035 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/ap_config.h	2020-11-11 11:55:32.854280846 +0800
@@ -976,6 +976,11 @@
 		double bias;
 	} *acs_chan_bias;
 	unsigned int num_acs_chan_bias;
+	int acs_chan_dynamic_select_enable;
+	unsigned int acs_chan_dynamic_select_period;
+	int switch_channel_even_have_sta_enable;
+	unsigned int acs_chan_busy_per;
+	unsigned int acs_chan_bet_per;
 #endif /* CONFIG_ACS */
 
 	int sta_min_dbm;
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/hostapd.c	2020-11-11 11:31:23.754220033 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/hostapd.c	2020-11-11 11:59:18.170290302 +0800
@@ -2086,6 +2086,10 @@
 
 	for (j = 0; j < iface->num_bss; j++)
 		hostapd_neighbor_set_own_report(iface->bss[j]);
+	//setup of interface done,if user have dynamic channel select enable,loop a timer
+	if(hapd->iconf->acs_chan_dynamic_select_enable)
+	      eloop_register_timeout(hapd->iconf->acs_chan_dynamic_select_period * 60, 0,
+				      ap_dynamic_select_channel_timeout, hapd, NULL);
 
 	return 0;
 
Index: hostapd-2019-08-08-ca8c2bd2/src/ap/hw_features.c
===================================================================
--- hostapd-2019-08-08-ca8c2bd2.orig/src/ap/hw_features.c	2020-11-11 11:31:23.346220016 +0800
+++ hostapd-2019-08-08-ca8c2bd2/src/ap/hw_features.c	2020-11-11 12:00:56.778294440 +0800
@@ -833,6 +833,18 @@
 			hostapd_hw_get_freq(iface->bss[0],
 					    iface->conf->channel),
 			iface->conf->channel);
+		//write valid channel to /var/run/24g.channel /var/run/5g.channel
+		FILE *channel_file = NULL;
+		if (iface->current_mode->mode == HOSTAPD_MODE_IEEE80211G)
+			channel_file = fopen("/var/run/24g.channel", "w+");
+		else
+			channel_file = fopen("/var/run/5g.channel", "w+");
+
+		if (channel_file)
+		{
+			fprintf(channel_file,"%d\n",iface->conf->channel);
+			fclose(channel_file);
+		}
 		break;
 	case HOSTAPD_CHAN_ACS:
 		wpa_printf(MSG_ERROR, "ACS error - reported complete, but no result available");
